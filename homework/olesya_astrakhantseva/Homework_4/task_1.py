my_dict = {'dict': {'one': 'python', 'two': 'php', 'three': 'javascript', 'four': 'ruby', 'five': 'java'},
           'tuple': ('машина', 'велосипед', 99, 'самосвал', 'скутер', 'самокат'),
           'list': ['яблоко', 'свекла', 'морковка', 'дыня', 'арбуз', 5],
           'set': {1, 20, 'множества', 15, 'кортеж', 'словарь'}}

# выведите на экран последний элемент ‘tuple’
print(f'1) Последний элемент в кортеже:', my_dict['tuple'][-1])

# добавьте в конец списка еще один элемент
my_dict['list'].append('тыковка')
print(f'2) В конец списка добавлено значение "тыковка" -', my_dict['list'])

# удалите второй элемент списка
my_dict['list'].pop(2)
print(f'3) Проверка, что значение "морковка" не существует в списке -', 'морковка' in my_dict['list'])


# добавьте в словарь элемент с ключом ('i am a tuple',) и любым значением
my_dict['dict'].update({'i am a tuple': 'C++'})
my_dict['dict']['i am a tuple 2'] = 'Golang'

# удалите какой-нибудь элемент
print(f'4) В словаре удален последний добавленный элемент -', my_dict['dict'].pop('i am a tuple 2'))


# Для того, что хранится под ключом ‘set’:
# добавьте новый элемент в множество
my_dict['set'].add(30)
print(f'5) В множестве добавлен новый элемент "30" -', my_dict['set'])

# удалите элемент из множества
my_dict['set'].remove(30)
print(f'6) Проверка, что добавленный элемент после удаления действительно отсутствует -', 30 in my_dict['set'])

# Вывести весь словарь
print(f'7) Весь словарь -', my_dict)